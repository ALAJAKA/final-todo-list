<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>todo 상세보기</title>
    <script src="https://code.jquery.com/jquery-3.6.3.min.js" integrity="sha256-pvPw+upLPUjgMXY0G+8O0xUf+/Im1MZjXxxgOcBQBXU=" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js" integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/2fb62d0520.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<div></div>
<script>
    // 달력 기능
        //현재 날짜
        const thisYear = new Date().getFullYear(); // 오늘 날짜의 년
        const thisMonth = new Date().getMonth()+1; // 오늘 날짜의 월
        const thisDate = new Date().getDate();//      오늘 날짜의 일
        const today = new Date(thisYear, thisMonth-1, thisDate, 9).toISOString().substring(0,10);
        var year = new Date().getFullYear();// 현재 날짜의 년
        var month =new Date().getMonth()+1;// 현재 날짜의 월
        var day =new Date().getDate();// 현재 날짜
        $(document).ready(function() {
            calender();
            cardGet();
            todoGet();
        });
        // 달력만들기
        function calender(){
            // 월별 일수 처리
            const days = {1:31,2:28,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31};
            // const thisYear = new Date().getFullYear(); // 오늘 날짜의 년
            // const thisMonth = new Date().getMonth()+1; // 오늘 날짜의 월
            // const thisDate = new Date().getDate();//      오늘 날짜의 일
            if(year%4==0){//윤년처리
                days[2]++;
            }

            $('#headerImg').removeClass('winter');
            $('#headerImg').removeClass('spring');
            $('#headerImg').removeClass('summer');
            $('#headerImg').removeClass('fall');
            if (month == 3 ||month == 4 ||month == 5 ) $('#headerImg').addClass('spring');
            if (month == 6 ||month == 7 ||month == 8 ) $('#headerImg').addClass('summer');
            if (month == 9 ||month == 10 ||month == 11 ) $('#headerImg').addClass('fall');
            if (month == 12 ||month == 1 ||month == 2 ) $('#headerImg').addClass('winter');
            $('#month').append(`<p>${month} 월</p>`);
            $('#day').append(`<p>${day} 일</p>`);
        }
    
        // 다음일로 이동
        function nextDay(){
            day +=1;
            const days = {1:31,2:28,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31};
            if(day > days[month]){
                if (month==12){
                    day = days[month]
                }else{
                    month +=1;
                    day = 1;
                }
            }
            $('#month *').remove();
            $('#day *').remove();
            calender()
            cardGet();
            todoGet();
        }
        // 이전일로 이동
        function lastDay(){
            day -=1;
            const days = {1:31,2:28,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31};
            if(day < 1){
                if (month==1){
                    day = 1
                }else{
                    month -=1;
                    day = days[month];
                }
            }
            $('#month *').remove();
            $('#day *').remove();
            calender()
            cardGet();
            todoGet();
        }

        //카드get
        function cardGet(){
            const date = new Date(year, month-1, day, 9).toISOString().substring(0,10);
            console.log(date);
            console.log(today);
            axios({
                method: 'get',
                url: '/api/todoLists/alldayTodo',
                params: {
                    date
                }
            })
                .then((response) => {
                    $('.card').remove();
                    const getAlldayTodo = response.data.getAlldayTodo;
                        $('#cards').append(`<div class="card cardPlusBox">
                            <button type="button" class="btn cardPlus" data-bs-toggle="modal" data-bs-target="#staticBackdrop1">
                                <i class="fa-solid fa-plus"></i>
                            </button>
                        </div>`)
                    let slideWidth = $('#cards').width();
                    slideWidth = 1298
                    console.log("기본 ", slideWidth);
                    for (let i = 0; i < getAlldayTodo.length; i++){
                        if(i>2) slideWidth += 322;
                        const content = getAlldayTodo[i].content
                        let image = getAlldayTodo[i].image
                        if(!image){
                            image = "https://todo-list-images.s3.ap-northeast-2.amazonaws.com/todolist/1679019089265_%C3%AC%C2%9C%C2%A0%C3%AB%C2%9F%C2%BD.jpg"
                        }
                        const title = getAlldayTodo[i].title
                        const success = getAlldayTodo[i].success
                        let uuid = self.crypto.randomUUID();
                        if(success=="SUCCESS"){
                            $('#cards').append(`
                                            <div class="card cards" id="card${uuid}">
                                                <div>
                                                    <img src="${image}" class="card-img-top" alt="...">
                                                    <button class="todoEdit abs" id="cardEdit${uuid}" onclick="cardEditBefore('${uuid}')"data-bs-toggle="modal" data-bs-target="#staticBackdrop2" ><i class="fa-solid fa-pen"></i></button>
                                                    <button class="todoDelete abs" id="cardDelete${uuid}" onclick="cardDelete('${uuid}')"><i class="fa-solid fa-xmark"></i></button>
                                                </div>
                                                <div class="card-body" id="cardBody${uuid}">
                                                    <h5 class="card-title" id="cardTitle${uuid}">${title}</h5>
                                                    <p class="card-text" id="cardText${uuid}">${content}</p>
                                                    <button class="todoBack abs3" id="cardSuccessCancel${uuid}" onclick="cardSuccessCancel('${uuid}')"><i class="fa-solid fa-rotate-left"></i></button>
                                                </div>
                                            </div>
                                            `);
                            $(`#cardTitle${uuid}`).css({"text-decoration":"line-through", "color":"#777"})
                            $(`#cardText${uuid}`).css({"text-decoration":"line-through", "color":"#777"})
                            $(`#cardEdit${uuid}`).hide();
                            $('#cards').css({width:`${slideWidth}`});
                            console.log(i,slideWidth);         
                        }else{
                            $('#cards').append(`
                                <div class="card cards" id="card${uuid}">
                                    <div>
                                        <img src="${image}" class="card-img-top" alt="...">
                                        <button class="todoEdit abs" id="cardEdit${uuid}" onclick="cardEditBefore('${uuid}')"data-bs-toggle="modal" data-bs-target="#staticBackdrop2" ><i class="fa-solid fa-pen"></i></button>
                                        <button class="todoDelete abs" id="cardDelete${uuid}" onclick="cardDelete('${uuid}')"><i class="fa-solid fa-xmark"></i></button>
                                    </div>
                                    <div class="card-body" id="cardBody${uuid}">
                                        <h5 class="card-title" id="cardTitle${uuid}">${title}</h5>
                                        <p class="card-text" id="cardText${uuid}">${content}</p>
                                        <button class="todoCheck abs2" id="cardSuccess${uuid}" onclick="cardSuccess('${uuid}')"><img src="/img/check2.png" height="50px;"></button>
                                    </div>
                                </div>`)
                            $('#cards').css({width:`${slideWidth}`});
                            console.log(i,slideWidth);    
                        }
                    }if(getAlldayTodo.length>3) {$('#cards').animate({left:-322})}
                    else{$('#cards').animate({left:0})}
                        if(date>today){
                        $('.todoCheck').hide();
                    }
                })
            }
        
        //카드 오른쪽으로 이동
            function cardMoveLeft(){
                const w = $('#cards').width();
                let scrollX =document.getElementById('cards').offsetLeft;
                if(w<=1298 || scrollX >=0) {
                    scrollX = 0;
                    $('#cards').animate({left:`${scrollX}`});
                }else{
                    scrollX += 322;
                    $('#cards').animate({left:`${scrollX}`});
                }
            }
        //카드 왼쪽으로 이동
            function cardMoveRight(){
                const w = $('#cards').width();
                let scrollX =document.getElementById('cards').offsetLeft;
                if(w<=1298 || w+scrollX<=1298){
                    scrollX = 1298-w;
                    $('#cards').animate({left:`${scrollX}`});
                }else{
                    scrollX -= 322;
                    $('#cards').animate({left:`${scrollX}`});
                }

            }    
        //투두get
        function todoGet(){
            const date = new Date(year, month-1, day, 9).toISOString().substring(0, 10);
            axios({
                method: 'get',
                url: '/api/todoLists/todayTodo',
                params: {
                    date
                }
            })
                .then((response) => {
                    const getTodayTodo = response.data.getTodayTodo;
                    $('.todoBox').remove();
                    for (let i = 0; i < getTodayTodo.length; i++){
                        const title = getTodayTodo[i].title
                        const success = getTodayTodo[i].success
                        let uuid = self.crypto.randomUUID();
                        const todoBoxes = document.getElementById('todoBoxes');
                        if(success=="SUCCESS"){
                            let todoSuccessInput=`
                                <li class="todoBox" id="happy${uuid}" onclick="todoSuccessCancel('${uuid}')">
                                    ${title}
                                    <button class="todoEdit2" id="todoEdit${uuid}" onclick="todoEdit('${uuid}')"><i class="fa-solid fa-pen"></i></button>
                                    <button class="todoDelete2" id="todoDelete${uuid}" onclick="todoDelete('${uuid}')"><i class="fa-solid fa-xmark"></i></button>
                                </li>`
                            todoBoxes.insertAdjacentHTML('beforeend', todoSuccessInput);    
                            $(`#happy${uuid}`).css({"text-decoration":"line-through", "color":"#777"})
                            $(`#todoEdit${uuid}`).hide();
                        }else{
                            let todoReadyInput=`
                                <li class="todoBox" id="happy${uuid}" onclick="todoSuccess('${uuid}')">
                                    ${title}
                                    <button class="todoEdit2" id="todoEdit${uuid}" onclick="todoEdit('${uuid}')"><i class="fa-solid fa-pen"></i></button>
                                    <button class="todoDelete2" id="todoDelete${uuid}" onclick="todoDelete('${uuid}')"><i class="fa-solid fa-xmark"></i></button>
                                </li>`
                            todoBoxes.insertAdjacentHTML('beforeend', todoReadyInput);
                            }
                        }
                    })
            }    
        
</script>
<script>
    //상위 온클릭 방지
    function cp(){
        if(event.stopPropagation){
            event.stopPropagation();
        }else{
            event.cancelBubble = true;
        }
    }
    //UUID 랜덤ID값
    function uuid() {
        let uuid = self.crypto.randomUUID();
        console.log(uuid);
    };
    //카드추가d
    function cardSave(){
        const title = document.getElementById('inputTitle').value;
        const content = document.getElementById('inputContent').value;
        const image = document.getElementsByName('inputImage')[0].files[0];
        const date = new Date(year, month-1, day, 9).toISOString().substring(0, 10);
        let Data = new FormData();
        Data.append('title', title)
        Data.append('content', content)
        Data.append('date', date)
        Data.append('image', image)
        if (title.trim() == ""){
            alert("내용이 없습니다.")
        }else{
            axios({
                headers: {
                    'Content-Type': 'multipart/form-data',
                },
                method: 'post',
                url: '/api/todoLists/alldayTodo',
                data: Data,
                
            })
                .then((response) => { 
                    let imgLink = response.data.postAlldayTodo.image
                    console.log(imgLink);
                    if(!imgLink){
                        imgLink = "https://todo-list-images.s3.ap-northeast-2.amazonaws.com/todolist/1679019089265_%C3%AC%C2%9C%C2%A0%C3%AB%C2%9F%C2%BD.jpg"
                        }
                    $('#staticBackdrop').modal('hide');    
                    let slideWidth = $('#cards').width();
                    console.log("기본 ", slideWidth);
                    let uuid = self.crypto.randomUUID();
                    $('#cards').append(`
                                <div class="card cards" id="card${uuid}">
                                    <div>
                                        <img src="${imgLink}" class="card-img-top" alt="...">
                                        <button class="todoEdit abs" id="cardEdit${uuid}" onclick="cardEditBefore('${uuid}')"data-bs-toggle="modal" data-bs-target="#staticBackdrop2" ><i class="fa-solid fa-pen"></i></button>
                                        <button class="todoDelete abs" id="cardDelete${uuid}" onclick="cardDelete('${uuid}')"><i class="fa-solid fa-xmark"></i></button>
                                    </div>
                                    <div class="card-body" id="cardBody${uuid}">
                                        <h5 class="card-title" id="cardTitle${uuid}">${title}</h5>
                                        <p class="card-text" id="cardText${uuid}">${content}</p>
                                        <button class="todoCheck abs2" id="cardSuccess${uuid}" onclick="cardSuccess('${uuid}')"><img src="/img/check2.png" height="50px;"></button>
                                    </div>
                                </div>`)
                    slideWidth += 322;
                    $('#cards').css({width:`${slideWidth}`});
                    if(slideWidth>1298) {$('#cards').animate({left:-322})}
                    else{$('#cards').animate({left:0})}
                        if(date>today){
                        $('.todoCheck').hide();
                    }
                })
        }
    }
    //카드 편집전
    function cardEditBefore(happy){
        let title = document.getElementById(`cardTitle${happy}`).innerText
        let content = document.getElementById(`cardText${happy}`).innerText
        $(`#modal2`).replaceWith(`
                                <div class="modal-body" id="modal2">
                                        <div class="mb-3">
                                            <input type="text" name="${title}" class="form-control" id="editTitle" maxlength="13" value="${title}">
                                        </div>
                                        <div class="mb-3">
                                            <label for="exampleFormControlTextarea1" class="form-label">Content</label>
                                            <textarea class="form-control" name="${happy}" id="editContent" rows="3" maxlength="40" >${content}</textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label for="formFileSm" class="form-label">Image</label>
                                            <input class="form-control form-control-sm" name="editImage" id="editImage" type="file">
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                                            <button type="button" onclick="cardEdit()" data-bs-dismiss="modal" class="btn btn-primary">수정</button>
                                        </div>
                                </div>
                                `)
                        
    }
    //카드편집
    function cardEdit(){
        const beforeTitle = document.getElementById('editTitle').name;
        const afterTitle = document.getElementById('editTitle').value;
        const happy = document.getElementById('editContent').name;
        const content = document.getElementById('editContent').value;
        const image = document.getElementsByName('editImage')[0].files[0];
        const date = new Date(year, month-1, day, 9).toISOString().substring(0, 10);
        
        let Data = new FormData();
        console.log(image);
        
        Data.append('beforeTitle', beforeTitle)
        Data.append('afterTitle', afterTitle)
        Data.append('content', content)
        Data.append('date', date)
        Data.append('image', image)
        if (afterTitle.trim() == ""){
            alert("내용이 없습니다.")
        }else{
            axios({
                headers: {
                    'Content-Type': 'multipart/form-data',
                },
                method: 'put',
                url: '/api/todoLists/alldayTodo',
                data: Data,
            })
                .then((response) => { 
                    console.log(response.data.image);
                    let imgLink = response.data.image
                    if(!imgLink){
                        imgLink = "https://todo-list-images.s3.ap-northeast-2.amazonaws.com/todolist/1679019089265_%C3%AC%C2%9C%C2%A0%C3%AB%C2%9F%C2%BD.jpg"
                        }
                    $('#staticBackdrop2').modal('hide');    
                    let slideWidth = $('#cards').width();
                    console.log("기본 ", slideWidth);
                    $(`#card${happy}`).replaceWith(`
                                <div class="card cards" id="card${happy}">
                                    <div>
                                        <img src="${imgLink}" class="card-img-top" alt="...">
                                        <button class="todoEdit abs" id="cardEdit${happy}" onclick="cardEditBefore('${happy}')"data-bs-toggle="modal" data-bs-target="#staticBackdrop2" ><i class="fa-solid fa-pen"></i></button>
                                        <button class="todoDelete abs" id="cardDelete${happy}" onclick="cardDelete('${happy}')"><i class="fa-solid fa-xmark"></i></button>
                                    </div>
                                    <div class="card-body" id="cardBody${happy}">
                                        <h5 class="card-title" id="cardTitle${happy}">${afterTitle}</h5>
                                        <p class="card-text" id="cardText${happy}">${content}</p>
                                        <button class="todoCheck abs2" id="cardSuccess${happy}" onclick="cardSuccess('${happy}')"><img src="/img/check2.png" height="50px;"></button>
                                    </div>
                                </div>`)
                    if(date>today){
                        $('.todoCheck').hide();
                    }

                })
        }
    }
    //카드완료d
    function cardSuccess(happy){
        const date = new Date(year, month-1, day, 9).toISOString().substring(0,10);
        let title = document.getElementById(`cardTitle${happy}`).innerText
        let content = document.getElementById(`cardText${happy}`).innerText
        let success="SUCCESS"
        axios({
                method: 'put',
                url: '/api/todoLists/cardSuccess',
                data: {
                    date, title, success
                }
            })
                .then((response) => {
                    $(`#cardBody${happy}`).replaceWith(`
                                        <div class="card-body" id="cardBody${happy}">
                                            <h5 class="card-title" id="cardTitle${happy}">${title}</h5>
                                            <p class="card-text" id="cardText${happy}">${content}</p>
                                            <button class="todoBack abs3" id="cardSuccessCancel${happy}" onclick="cardSuccessCancel('${happy}')"><i class="fa-solid fa-rotate-left"></i></button>
                                        </div>
                                        `)
                    $(`#cardTitle${happy}`).css({"text-decoration":"line-through", "color":"#777"})
                    $(`#cardText${happy}`).css({"text-decoration":"line-through", "color":"#777"})
                    $(`#cardEdit${happy}`).hide();
                })
        }
    //카드완료취소
    function cardSuccessCancel(happy){
        const date = new Date(year, month-1, day, 9).toISOString().substring(0,10);
        let title = document.getElementById(`cardTitle${happy}`).innerText
        let content = document.getElementById(`cardText${happy}`).innerText
        let success="READY"
        axios({
                method: 'put',
                url: '/api/todoLists/cardSuccess',
                data: {
                    date, title, success
                }
            })
                .then((response) => {
                    $(`#cardBody${happy}`).replaceWith(`
                                        <div class="card-body" id="cardBody${happy}">
                                            <h5 class="card-title" id="cardTitle${happy}">${title}</h5>
                                            <p class="card-text" id="cardText${happy}">${content}</p>
                                            <button class="todoCheck abs2" id="cardSuccess${happy}" onclick="cardSuccess('${happy}')"><img src="/img/check2.png" height="50px;"></button>
                                        </div>
                                        `)
                    $(`#cardEdit${happy}`).show();
                    $(`#cardDelete${happy}`).show();
                })
        }
    //카드삭제
    function cardDelete(happy){
            $(`#card${happy}`).remove();
        }


    //투두 완료
    function todoSuccess(happy){
        const date = new Date(year, month-1, day, 9).toISOString().substring(0, 10);
        let title = document.getElementById(`happy${happy}`).innerText
        let success="SUCCESS"
        axios({
                method: 'put',
                url: '/api/todoLists/todoSuccess',
                data: {
                    date, title, success
                }
            })
                .then((response) => {
                    $(`#happy${happy}`).replaceWith(`
                        <li class="todoBox" id="happy${happy}" onclick="todoSuccessCancel('${happy}')">
                            ${title}
                            <button class="todoEdit2" id="todoEdit${happy}" onclick="todoEdit('${happy}')"><i class="fa-solid fa-pen"></i></button>
                            <button class="todoDelete2" id="todoDelete${happy}" onclick="todoDelete('${happy}')"><i class="fa-solid fa-xmark"></i></button>
                        </li>`)
                    $(`#happy${happy}`).css({"text-decoration":"line-through", "color":"#777"})
                    $(`#todoEdit${happy}`).hide();
                })
        }
    //투두 완료취소
    function todoSuccessCancel(happy){
        const date = new Date(year, month-1, day, 9).toISOString().substring(0, 10);
        let title = document.getElementById(`happy${happy}`).innerText
        let success="READY"
        axios({
                method: 'put',
                url: '/api/todoLists/todoSuccess',
                data: {
                    date, title, success
                }
            })
                .then((response) => {
                    $(`#happy${happy}`).replaceWith(`
                        <li class="todoBox" id="happy${happy}" onclick="todoSuccess('${happy}')">
                        ${title}
                        <button class="todoEdit2" id="todoEdit${happy}" onclick="todoEdit('${happy}')"><i class="fa-solid fa-pen"></i></button>
                        <button class="todoDelete2" id="todoDelete${happy}" onclick="todoDelete('${happy}')"><i class="fa-solid fa-xmark"></i></button>
                        </li>`)
                    $(`#todoEdit${happy}`).show();
                })
    }
    //투두 수정버튼
    function todoEdit(happy){
        cp();
        console.log("CHECK");
        let title = document.getElementById(`happy${happy}`).innerText
        $(`#happy${happy}`).replaceWith(`
            <li class="todoBoxLi" id="todoEditBox${happy}">                       
                <div class="todoBox">
                    <input class="todoInput" id="todoEdit${happy}" type="text" name="${title}" value="${title}" maxlength="24">
                    <button class="todoCheck2" onclick="todoEditSave('${happy}')"><i class="fa-solid fa-check"></i></button>
                    <button class="todoCancel2" onclick="todoEditCancel('${happy}')"><i class="fa-solid fa-xmark"></i></button>
                </div>
            </li>
            `);
    }
    //투두 수정저장
    function todoEditSave(happy){
        const date = new Date(year, month-1, day, 9).toISOString().substring(0, 10);
        const beforeTitle = document.getElementById(`todoEdit${happy}`).name;
        const afterTitle = document.getElementById(`todoEdit${happy}`).value;
        console.log(beforeTitle);
        console.log(afterTitle);
        if (afterTitle.trim() == ""){
            alert("내용이 없습니다.")
        }else{
            if(beforeTitle==afterTitle){
                todoEditCancel(happy)
                return;
            }
            let success="READY"
            axios({
                    method: 'put',
                    url: '/api/todoLists/todayTodo',
                    data: {
                        date, beforeTitle, afterTitle
                    }
                })
                .then((response) => {
                    $(`#todoEditBox${happy}`).replaceWith(`
                    <li class="todoBox" id="happy${happy}" onclick="todoSuccess('${happy}')">
                        ${afterTitle}
                        <button class="todoEdit2" id="todoEdit${happy}" onclick="todoEdit('${happy}')"><i class="fa-solid fa-pen"></i></button>
                        <button class="todoDelete2" id="todoDelete${happy}" onclick="todoDelete('${happy}')"><i class="fa-solid fa-xmark"></i></button>
                    </li>  
                    `);
                })
        }
    }
    //투두 수정취소
    function todoEditCancel(happy){
        const title = document.getElementById(`todoEdit${happy}`).value
        console.log(title);
            $(`#todoEditBox${happy}`).replaceWith(`
                    <li class="todoBox" id="happy${happy}" onclick="todoSuccess('${happy}')">
                        ${title}
                        <button class="todoEdit2" id="todoEdit${happy}" onclick="todoEdit('${happy}')"><i class="fa-solid fa-pen"></i></button>
                        <button class="todoDelete2" id="todoDelete${happy}" onclick="todoDelete('${happy}')"><i class="fa-solid fa-xmark"></i></button>
                    </li>
            `);
    }
    //투두 삭제
    function todoDelete(happy){
        cp();
        let title = document.getElementById(`happy${happy}`).innerText
        const date = new Date(year, month-1, day, 9).toISOString().substring(0, 10);
        axios({
                method: 'delete',
                url: '/api/todoLists/todayTodo',
                data: {
                    date, title
                }
            })
                .then((response) => {
                    $(`#happy${happy}`).remove();
                })
    }
    //투두추가버튼
    function todoPlus() {
        console.log();
        $('#todoPlusBox').hide();
        const listBox = document.getElementById('listBox');
        let todoInput=`
            <li class="todoBoxes" id="todoInputBox">                       
                <div class="todoBox2">
                    <input class="todoInput" id="todayTodo" type="text" placeholder="To Do를 입력해주세요" maxlength="24">
                    <button class="todoCheck2" onclick="todoPlusSave()"><i class="fa-solid fa-check"></i></button>
                    <button class="todoCancel2" onclick="todoPlusCancel()"><i class="fa-solid fa-xmark"></i></button>
                </div>
            </li>
            `
        listBox.insertAdjacentHTML('beforeend', todoInput);
    }
    //투두추가저장
    function todoPlusSave(){
        const date = new Date(year, month-1, day, 9).toISOString().substring(0, 10);
        let uuid = self.crypto.randomUUID();
        const title = document.getElementById('todayTodo').value;
        if (title.trim() == ""){
            alert("내용이 없습니다.")
        }else{
            axios({
                method: 'post',
                url: '/api/todoLists/todayTodo',
                data: {
                    date, title
                }
            })
                .then((response) => {
                    const todoBoxes = document.getElementById('todoBoxes');
                    let todoPlusBoxInput=`
                    <li class="todoBox" id="happy${uuid}" onclick="todoSuccess('${uuid}')">
                                ${title}
                                <button class="todoEdit2" id="todoEdit${uuid}" onclick="todoEdit('${uuid}')"><i class="fa-solid fa-pen"></i></button>
                                <button class="todoDelete2" id="todoDelete${uuid}" onclick="todoDelete('${uuid}')"><i class="fa-solid fa-xmark"></i></button>
                            </li>  `
                    $(`#todoPlusBtn`).replaceWith(`
                            <button type="button" class="btn todoPlus" id="todoPlusBtn" onclick="todoPlus()">
                                <i class="fa-solid fa-plus"></i>
                            </button>`);

                    todoBoxes.insertAdjacentHTML('beforeend', todoPlusBoxInput);
                    $('#todoInputBox').remove();
                    $('#todoPlusBox').show();
                })
        }
    }
    //투두추가취소
    function todoPlusCancel(){
        $('#todoInputBox').remove();
        $('#todoPlusBox').show();
    }
    

</script>
<style>
    input:focus {outline: none;}
    /* 헤드 */
    *{margin:0;padding:0;}
    ::-webkit-scrollbar {
        width: 0px;
    }
    ul,li,ol{list-style: none; margin:0; padding:0;}
    .fo{background: red; border-radius: 5px;}
    /* 헤더 네비게이션 */
    #leftNav {transition: 0.5s}
    .leftMenu {background: none; border: 0; border-bottom: 1px solid black; width: 80%; padding: 10px; transition: 0.5s; border-radius: 5px;}
    .leftMenu:hover {background: #777}
    .btntt{width:50px; height:50px; line-height: 50px; border:0; border-radius: 5px; background: rgba(255,255,255,0.3);; font-size: 20px; transition: 1s; }
    .btntt:hover{background-color: rgba(255,255,255,0.7);}
    h2{text-align:center; margin-top: 50px;}

    /* 카드 영역*/
    #slide {position: relative; text-align: center;overflow-x: hidden; height:550px; margin: 0; padding:0 !important;}
    #cards{position: absolute; width:1298px; height:500px; margin: 0; padding:50px 0 0 0; left:0; }
    /*개별 카드*/
    .card { width: 300px; height: 400px; margin:0 10px 0 11px; float: left; box-sizing: border-box;}
    .card:nth-of-type(1){margin-left:20px;}
    .card-img-top {height: 170px;}
    .card-body {background-color: hsl(0, 0%, 80%, 0.3)}
    .cardPlus {background: none; width:100px; height:100px;  margin: 0 auto; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff; border: 0; padding:0; font-size: 45pt; border-radius: 45px; transition: 1s; }
    .cardPlus:hover{background-color: rgba(255,255,255,0.7);}
    .cardPlusBox{background-image: url(/img/winter.jpg);text-align: center; justify-content: center; }
    /*카드 좌우 이동버튼*/
    .cardBtn{position: absolute;width:50px; height:50px; border-radius: 25px; top:50%; border:0; background: none; transition: 1s;}
    .cardBtn:hover {background: #eee;}

    .todoEdit {background: none; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff; border: 0;
                border-radius: 10px; transition: 1s;
                position: absolute; padding: 0px; line-height: 25px; width:25px; height:25px; top:5px; right:35px;}
    .todoEdit:hover{background-color: rgba(255,255,255,0.7);}            
    .todoDelete {background: none; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff; border: 0; font-size: 17pt;
                border-radius: 10px; transition: 1s;
                position: absolute; padding: 0px; line-height: 25px; width:25px; height:25px; top:5px; right:5px;}
    .todoDelete:hover{background-color: rgba(255,255,255,0.7);}
    .todoCheck {background: none; border: 0px;}
    .todoBack {background: none; border: 0px; width: 30px; height: 30px;}
    .fa-solid{color: rgb(61, 59, 59);}
    .abs3 {position: absolute; height: 40px; width: 40px;  border-radius: 35px; bottom:30px; transform: translate(-50%); transition: 0.2s;}
    .abs3:hover{background-color:  rgba(255,255,255,0.7); box-sizing: border-box; }
    .abs2 {position: absolute; height: 70px; box-sizing: border-box; padding: 10px; border-radius: 35px; bottom:15px; transform: translate(-50%);  transition: 0.2s;}
    .abs2:hover{background-color:  rgba(255,255,255,0.7); box-sizing: border-box; }
    .modal-body {text-align: left;}
    .form-label{font-size: 17pt;}

    /* 리스트섹션 */
    .form-check {height: 70px; padding:10px; margin-top: 15px; border: 0.1px solid rgb(163, 156, 156); border-radius: 35px; background-color:rgba(204, 204, 204, 0.302);  display: flex;  text-align: center; justify-content: center; align-content: center;}
    .form-check-input{height:30px; width:30px;  font-size: 22pt; }
    .form-check-label{width:750px; font-size: 22pt;}
    .todoBox{ cursor : pointer; position: relative; background: none;  width:100%; height: 70px; line-height: 65px; border: 1px solid rgb(163, 156, 156);border-radius: 35px; font-size: 22pt; margin-top:15px;}
    .todoBox:hover{background-color: rgb(163, 156, 156);}
    .todoBox2{ position: relative; background: none;  width:100%; height: 70px;  line-height: 65px; border: 1px solid rgb(163, 156, 156);border-radius: 35px; font-size: 22pt; margin-top:15px;}
    .todoEdit2 { width:40px; top:20%; height: 40px; line-height: 40px; background: none; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff;
                position: absolute; right:7%; border: 0; font-size: 17pt; border-radius: 25px; transition: 1s;}
    .todoEdit2:hover{background-color: rgba(0,0,0,0.7);}
    .todoDelete2 {width:40px; top:20%; height: 40px; line-height: 40px; background: none; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff;
                position: absolute; right:2%; border: 0; font-size: 17pt; border-radius: 25px; transition: 1s;}
    .todoDelete2:hover{background-color: rgba(0,0,0,0.7);}
    .todoCheck2 {width:40px; top:20%; height: 40px; line-height: 40px; background: none; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff;
                position: absolute; right:7%; border: 0; font-size: 19pt; border-radius: 25px; transition: 1s;}
    .todoCheck2:hover{background-color: rgba(0,0,0,0.7);}
    .todoCancel2 {width:40px; top:20%; height: 40px; line-height: 40px; background: none; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff;
                position: absolute; right:2%; border: 0; font-size: 17pt; border-radius: 25px; transition: 1s;}
    .todoCancel2:hover{background-color: rgba(0,0,0,0.7);}
    .todoPlus {background: none; width:50px; height:50px; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff; border: 0; border-radius: 25px; padding:0; font-size: 25pt;  transition: 1s; 
                position: absolute; transform: translate(-50%); margin-top: 10px;}
    .todoPlus:hover{background-color: rgba(0,0,0,0.7);}
    .todoInput { width:600px;  background:none; border: 5px solid; margin: 0 auto; height: 63px;  text-align: center; justify-content: center; align-content: center;}
    
</style>
<body>
<!--네비게이션-->
<%-include('./topNav')%>
<!--바디-->

<!--헤더-->
<section style="background-image: url('/img/winter.jpg'); background-size: cover; margin-top: 80px;">
    <div class="container-fluid" style="height:400px; text-align: center;" >
        <h1 style="padding-top: 100px; color:#000; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff;">일간 TODO 리스트</h1>
        <div>
            <p>
                <span id="month" style="text-align: center;color:#000; font-size: 40px; text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff;"></span>
            </p>
            <div>
                <button type="button" class="btntt" id="btnLeft" onclick="lastDay()"><i class="fa-solid fa-chevron-left"></i></button>
                    <div id="day" style="color:#000;font-size: 36px; width:100px; display:inline-block;text-shadow: -1px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff;"></div>
                <button type="button" class="btntt" id="btnRight" onclick="nextDay()"><i class="fa-solid fa-chevron-right"></i></button>
            </div>
        </div>
    </div>
</section>
<!--카드섹션-->
<section style="background-color: rgba(255,255,255); height: 550px; position: relative"><!-- 가로 풀사이즈-->
    <div class="container" style="position: relative">
        <h2 style="text-align: center; margin-top: 50px;">투두리스트 카드</h2>
        <div id="slide">
            <div id="cards">
            </div>
        </div>
        <div>
            <button id="cbl" class="cardBtn" onclick="cardMoveLeft()"style="left:-50px;"><i class="fa-solid fa-chevron-left"></i></button>
            <button id="cbr" class="cardBtn" style="right:-50px;" onclick="cardMoveRight()"><i class="fa-solid fa-chevron-right"></i></button>
        </div>
        <!--   카드 이동 버튼-->
    </div>

</section>
<!--투두리스트 섹션-->
<h2>Today</h2>
<div class="container" style="padding: 0;">
    <div class="row" style="padding: 0;">
        <div class="col-md-2" style="margin: 0;"></div>
<!--        투두리스트  인풋 및 상자-->
        <div class="col-md-8" style="padding: 0; margin: 0;">
            <section id="listBox" style="text-align: center;">
                <ul class="todoBoxes" id="todoBoxes">
                </ul>
                <li class="todoBox2" id="todoPlusBox">                       
                    <button type="button" class="btn todoPlus" id="todoPlusBtn" onclick="todoPlus()">
                        <i class="fa-solid fa-plus"></i>
                    </button>
                </li>
            </section>
        </div>
    </div>
        <div class="col-md-2"style="margin: 0;"></div>
    </div>
</div>
<!--모달-->
<!-- 모달창1 -->
<div class="modal fade" id="staticBackdrop1" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">TODO 리스트 추가</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <input type="text" name="title" class="form-control" id="inputTitle" maxlength="13">
                </div>
                <div class="mb-3">
                    <label for="exampleFormControlTextarea1" class="form-label">Content</label>
                    <textarea class="form-control" name="content" id="inputContent" rows="3" maxlength="40"></textarea>
                </div>
                <div class="mb-3">
                    <label for="formFileSm" class="form-label">Image</label>
                    <input class="form-control form-control-sm" accept="image/*" name="inputImage" id="inputImage" type="file">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                    <button type="button" onclick="cardSave()" data-bs-dismiss="modal" class="btn btn-primary">등록</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- 모달창2 -->
<div class="modal fade" id="staticBackdrop2" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel2">TODO 리스트 수정</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal2">
                <div class="mb-3">
                    <input type="text" name="title" class="form-control" id="editTitle" maxlength="13">
                </div>
                <div class="mb-3">
                    <label for="exampleFormControlTextarea1" class="form-label">Content</label>
                    <textarea class="form-control" name="content" id="editContent" rows="3" maxlength="40" ></textarea>
                </div>
                <div class="mb-3">
                    <label for="formFileSm" class="form-label">Image</label>
                    <input class="form-control form-control-sm" accept="image/*" name="editImage" id="editImage" type="file">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                    <button type="button" onclick="cardEdit()" data-bs-dismiss="modal" class="btn btn-primary">수정</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!--풋터-->
<%-include('./footer')%>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
</body>
</html>