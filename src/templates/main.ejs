<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>메인페이지</title>
  <!--    BootStrap Library-->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link href="https://fonts.googleapis.com/css2?family=Dongle:wght@700&family=Jua&family=Noto+Serif+KR:wght@200&display=Gowun+Dodum&display=swap"
        rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
          integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
          crossorigin="anonymous"></script>
  <!--    JQuery-->
  <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
  <!--    JQuery Cookie-->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js"></script>
  <!--    fontawesome-->
  <script src="https://kit.fontawesome.com/2fb62d0520.js" crossorigin="anonymous"></script>
  <!--    calendar-->
  <meta name='viewport' content='width=device-width, initial-scale=1'>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.7.0/main.min.css">
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/fullcalendar@5.7.0/main.min.js"></script>
</head>
<style>
  /*전체 옵션*/
  *{margin:0;padding:0;}
  input:focus {outline: none;}
  ::-webkit-scrollbar {
    width: 0;
  }
  ul,li,ol{list-style: none; margin:0; padding:0;}
  #leftNav {transition: 0.5s}
  .leftMenu {background: none; border: 0; border-bottom: 1px solid black; width: 90%; padding: 10px; transition: 0.5s; border-radius: 5px;}
  .leftMenu:hover {background: #777}

  #calendarBox{
    width: 50%;
  }

  #calendarBox > div {
    float: left;
  }

  .fc-toolbar-title {
    margin-left: 220px !important;
    font-weight: bold;
  }

  .fc-col-header-cell {
	background-color: #FFFFCC;
  }

  .fc-day a {
    color: black;
    text-decoration: none;
  }

  .fc-day-sun a {
    color: red;
    text-decoration: none;
  }

  .fc-day-sat a {
    color: blue;
    text-decoration: none;
  }

  .fc-header-toolbar{
    margin-bottom: 0 !important;
    height: 120px;
  }

  .more {
    display: inline-block;
    transform: rotate(15deg);
    position: relative;
    top: -12px;
    cursor: pointer;
  }
  

  .fc-event {
  text-align: center;
  }

  /* slider */
.slider1 {
    height: 500px;
}

/* slider-cards */
.slide-card1 {
    width: 300px;
    border-radius: 5px;
    cursor: pointer;
}
  /* slider */
  .slider2 {
    height: 500px;
}

/* slider-cards */
.slide-card2 {
    width: 300px;
    border-radius: 5px;
    cursor: pointer;
}

/* slider-arrows */
.arrow {
    transition: 1s;
    width: 40px;
    height: 40px;
}
#todo-next-arrow{
  transition: 1s;
}
#todo-previous-arrow{
  transition: 1s;
}
#bucket-next-arrow{
  transition: 1s;
}
#bucket-previous-arrow{
  transition: 1s;
}

.fc-toolbar {
  position: relative;
}
.fc-toolbar-title::before {
  position: absolute;
  font-size: 15px;
  content: "🟥 Allday To-Do List달성률";

  left: 0;
  top: 50%;
  transform: translateY(-50%);
}

.fc-toolbar-title::after {
  position: absolute;
  font-size: 15px;
  content: "🟩 To-Do List달성률";
  left: 0;
  top: 70%;
  transform: translateY(-50%);
}

.fc-day-today {
  background-color: #FFFFCC !important;
}

.fc-daygrid-day-number {
  font-weight: bold;
}
.modal-hide{
  display: none;
}
</style>
<script>
  $(document).ready(function(){
      loginCheck();
      a();
      b();
      c();
    // get card width dynamically
    cardWidth = $(".slide-card1").width();
    // todo-next-arrow
    $('#todo-next-arrow').click(function () {
      var firstChildAppend = $(".slide-card1:first-child");
      $(".slide-card1").animate({ left: -cardWidth }, function () {
        $('#todofeed').append(firstChildAppend);
        $(".slide-card1").css({
          left: 0,
        })
      })
    });
    // todo-previous-arrow
    $('#todo-previous-arrow').click(function () {
      var lastChildPrepend = $(".slide-card1:last-child");
      $(".slide-card1").animate({ left: cardWidth }, function () {
        $('#todofeed').prepend(lastChildPrepend);
        $(".slide-card1").css({
          left: 0,
        })
      })
    });

    // bucket-next-arrow
    $('#bucket-next-arrow').click(function () {
      var firstChildAppend = $(".slide-card2:first-child");
      $(".slide-card2").animate({ left: -cardWidth }, function () {
        $('#bucketfeed').append(firstChildAppend);
        $(".slide-card2").css({
          left: 0,
        })
      })
    });
    // bucket-previous-arrow
    $('#bucket-previous-arrow').click(function () {
      var lastChildPrepend = $(".slide-card2:last-child");
      $(".slide-card2").animate({ left: cardWidth }, function () {
        $('#bucketfeed').prepend(lastChildPrepend);
        $(".slide-card2").css({
          left: 0,
        })
      })
    });
  });

  // 로그인 리다이렉트
  function loginCheck(){
    const data = window.location.href.split('#')[1];
    const myName = localStorage.getItem('name');
    if(document.cookie&& myName===null) logout();
    if(data===undefined)return;
    $.ajax({
      type:"POST",
      url:"/api/user/login",
      data:{data},
      success:function (res){
        document.cookie = `access_token=${res['Atoken']}`;
        localStorage.setItem("name",res['name']);
        location.href="/";
      }
    })
  }
  // 메인 캘린터 데이터 표시
  function c(){
      var calendarEl = document.getElementById('calendar');
      var calendar = new FullCalendar.Calendar(calendarEl, {
        height: 780,
        contentHeight: 180,
        timeZone: 'UTC+9',
        initialView: 'dayGridMonth',
        eventOrder : 'displayOrder',
        locale: 'ko',
        dayCellContent: function(e) {
          var dayNumberText = e.dayNumberText.replace('일', ''); // '일'을 제거
          return dayNumberText;
        },
        titleFormat: function (date) {
          year = date.date.year;
          month = date.date.month + 1;
          return year + "년 " + month + "월";
        },
        events: function (info, success, failure) {
          // Calendar TodoList 데이터 가져오기
          fetch('/api/calendar/todo' , {
            credentials: "include"})
                  .then((response) => response.json())
                  .then((data) => {
                    const todo = data.data;
                    // 캘린더의 날짜가 변경될 때마다 호출되는 함수
                    function updateTodoPreview() {
                      const currentDate = calendar.getDate(); // 현재 캘린더에 표시되는 날짜
                      const currentStr = currentDate.toISOString().substr(0, 10); // YYYY-MM-DD 형식의 문자열로 변환
                      fetch(`/api/calendar/todo?date=${currentStr}`)
                              .then(response => response.json())
                              .then(data => {
                                const todo = data.data.filter(todoo => todoo.today.startsWith(currentStr))
                                        .slice(0,6)
                                        .map(todoo => `<p style="line-height:5px">${todoo.title}<hr style="width: 60%; margin-left: auto; margin-right: auto;"/></p>`)
                                        .join('');
                                todoPreview.innerHTML = todo;
                              });
                    }
                    // 페이지가 로드될 때 한 번 호출하여 현재 날짜 미리보기를 표시함
                    updateTodoPreview();
                    // 달성률 계산
                    const todoAchievements = {}; // 빈 객체 생성
                    for (let i = 0; i < todo.length; i++) {
                      const date = todo[i].today;
                      const achieved = todo[i].success === 'SUCCESS' ? 1 : 0; // 'SUCCESS'일 경우 1을, 아닐 경우('READY') 0
                      if (!todoAchievements[date]) {
                        todoAchievements[date] = { achieved: 0, total: 0 }; // 객체에 현재 날짜의 항목이 없을 경우, 새 객체를 생성하고 추가
                      }
                      todoAchievements[date].achieved += achieved; // 해당 날짜의 achieved 에 현재 항목 수 +
                      todoAchievements[date].total++; // 해당 날짜의 total 에 +1 함
                    }
                    // 이벤트 생성
                    const todoEvents = [];
                    for (const date in todoAchievements) { //for in 반복문: 객체의 속성들을 반복할때 주로 사용
                      const achievementRate = todoAchievements[date].total > 0
                              ? Math.round((todoAchievements[date].achieved / todoAchievements[date].total) * 100)
                              : 0; // 삼항 연산자를 사용하여 값이 0보다 크면 달성률 계산, 0보다 작거나 같으면(해당 날짜에 할 일 없는 경우) 0
                      todoEvents.push({
                        title: `${Math.round(achievementRate)}%`, // Math.round함수 정수 반올림
                        start: date, // 이벤트 시작 날짜
                        color: 'green', 
                      });
                    }

                    // Calendar alldayTodoList 데이터 가져오기
                    fetch('/api/calendar/alldayTodo', {
                      credentials: "include"})
                            .then((response) => response.json())
                            .then((data) => {
                              const alldaytodo = data.data;

                              // 달성률 계산
                              const alldayAchievements = {};
                              for (let i = 0; i < alldaytodo.length; i++) {
                                const date = alldaytodo[i].createdAt;
                                const achieved = alldaytodo[i].success === 'SUCCESS' ? 1 : 0;
                                if (!alldayAchievements[date]) {
                                  alldayAchievements[date] = { achieved: 0, total: 0 }; 
                                }
                                alldayAchievements[date].achieved += achieved;
                                alldayAchievements[date].total++; 
                              }
                              // 이벤트 생성
                              const alldayEvents = [];
                              for (const date in alldayAchievements) { 
                                const achievementRate = alldayAchievements[date].total > 0
                                        ? Math.round((alldayAchievements[date].achieved / alldayAchievements[date].total) * 100)
                                        : 0; 
                                        console.log(alldayEvents)
                                alldayEvents.push({
                                  title: `${Math.round(achievementRate)}%`, 
                                  start: date, 
                                  color: 'red',
                                });
                              
                              }
                              const events = [...todoEvents, ...alldayEvents];
                              success(events);
                            })
                            .catch((error) => {
                              failure(error);
                            });
                  })
                  .catch((error) => {
                    failure(error);
                  });
        },

        // 일자를 클릭할 때 실행되는 함수
        dateClick: function(info) {
          const selectedDate = info.date || new Date(); // info.date가 존재하지 않으면 현재 날짜로 초기화
          const selectedDateCell = info.dayEl;
          const todayCells = document.getElementsByClassName('fc-day-today');
          for (let i = 0; i < todayCells.length; i++) {
            todayCells[i].classList.remove('fc-day-today');
          }
          selectedDateCell.classList.add('fc-day-today');
          calendar.gotoDate(selectedDate); // 클릭한 날짜로 이동

          // 해당 일자에 맞는 TodoList 미리보기
          const selectedDateStr = selectedDate.toISOString().substr(0, 10);
          fetch(`/api/preview/todo?date=${selectedDateStr}`, {
            credentials: "include"
          })
            .then(response => response.json())
            .then(data => {
              const todo = data.data
                .filter(todoo => todoo.today.startsWith(selectedDateStr))
                .slice(0,6)
                .map(todoo => `<p style="line-height:5px">${todoo.title}<hr style="width: 60%; margin-left: auto; margin-right: auto;"/></p>`)
                .join('');
              todoPreview.innerHTML = todo;
          });

        },
      });
      calendar.render();
  }
  // 포스트잇 버킷리스트 미리보기
  function a(){
    fetch('/api/preview/bucket', {
      credentials: "include"})
            .then((response) => response.json())
            .then((data) => {
              const bucket = data.data;
              for (let i = 0; i < bucket.length; i++){
                const buckett = `<p style="line-height:5px">${bucket[i].title}<hr style="width: 60%; margin-left: auto; margin-right: auto;"/></p>`;
                const p = document.createElement('p');
                p.innerHTML = buckett;
                document.getElementById('bucketPreview').appendChild(p);
              }
            });
  }
  function b(){
    // 추천 투두리스트 카드
    fetch('/api/card/alldayTodo')
            .then((response) => response.json())
            .then((data) => {
              const todoHtml = data.data.map(
                      (todo) => `
          <div class="slide-card1 position-relative bg-white overflow-hidden shadow-sm mx-2" data-bs-toggle="modal" data-bs-target="#exampleModal1"onclick="modalDate1('${todo.title}','${todo.content}','${todo.image}','${todo.name}','${todo.updatedAt}','${todo.shareCount}')">
            <div class="text-decoration-none">
            <div style="height:300px;width:300px; background-image:url('${todo.image}'); background-position: center; background-size: contain; background-repeat: no-repeat;"></div>
              <div class="p-3" style="height:150px; padding:0 !important;">
                <p class="text-dark my-2 fs-5 fw-semibold" style="text-align: center;">${todo.title}</p>
                <p class="text-dark" style="text-align: center;">${todo.name}</p>
                <p class="text-dark" style="text-align: right;">공유 횟수 : ${todo.shareCount} </p>
                <p class="text-dark" style="text-align: right;">${todo.updatedAt}</p>
              </div>
            </div>
          </div>
        `
              );
              document.getElementById('todofeed').innerHTML = todoHtml.join('');
            });

    // 추천 버킷리스트 카드
    fetch('/api/card/bucket')
            .then((response) => response.json())
            .then((data) => {
              const bucketHtml = data.data.map(
                      (bucket) => `
          <div class="slide-card2 position-relative bg-white overflow-hidden shadow-sm mx-2" data-bs-toggle="modal" data-bs-target="#exampleModal2" onclick="modalDate2('${bucket.title}','${bucket.content}','${bucket.image}','${bucket.name}','${bucket.updatedAt}','${bucket.shareCount}' )">
            <div class="text-decoration-none">
              <div style="height:300px;width:300px; background-image:url('${bucket.image}'); background-position: center; background-size: contain;  background-repeat: no-repeat"></div>
                <div class="p-3"style="height:150px; padding:0 !important;">
                <p class="text-dark my-2 fs-5 fw-semibold" style="text-align: center;">${bucket.title}</p>
                <p class="text-dark" style="text-align: center;">${bucket.name}</p>
                <p class="text-dark" style="text-align: right;">공유 횟수 : ${bucket.shareCount} </p>
                <p class="text-dark" style="text-align: right;">${bucket.updatedAt}</p>
              </div>
            </div>
          </div>
        `
              );
              document.getElementById('bucketfeed').innerHTML = bucketHtml.join('');
            });
  }
  //모달 투두 데이터 가쟈오기
  function modalDate1(title,content,image,name,update,shareCount){
    $('#modelImg1').css("background-image","url("+image+")");
    $('#modelTitle1').text(title);
    $('#modelName1').text("작성자 : " + name);
    $('#modelDate1').text("작성일 : "+ update);
    $('#modelContent1').text("상세내용 : " + content);
    $('#modelShareCount1').text("공유 횟수 : "+shareCount);
    modalCX();
    getTodoComments();

  }
  //모달 버킷 데이터 가져오기
  function modalDate2(title,content,image,name,update,shareCount){
    $('#modelImg2').css("background-image","url("+image+")");
    $('#modelTitle2').text(title);
    $('#modelName2').text("작성자 : " + name);
    $('#modelDate2').text("작성일 : "+ update);
    $('#modelContent2').text("상세내용 : " + content);
    $('#modelShareCount2').text("공유 횟수 : "+shareCount);
    modalCX();
    getComments();
  }
// 투두 공유 횟수
  function todoShare(){
    const todoShareTitle = $('#modelTitle1').text();
    const todoShareName = $('#modelName1').text().split(" : ")[1];
    const todoShareCount = $('#modelShareCount1').text().split(" : ")[1];
    if(localStorage.getItem('name')===null ||localStorage.getItem('name')===undefined ){
      alert('로그인 후 이용 가능합니다.');
      return location.href='https://todo-list.auth.ap-northeast-2.amazoncognito.com/login?client_id=7r03hfgoepij4uajvqj1vq94d2&response_type=token&scope=email+openid+profile&redirect_uri=https://flutterStudy.com';
    }
    $.ajax({
      type:"POST",
      url:"/api/todoLists/todoShare",
      data:{
        shareTitle:todoShareTitle,
        shareName:todoShareName,
        shareCount:todoShareCount
      },
      success:function (res){
        alert(res.msg)
      }
    })
  }
// 버킷 공유 횟수
  function bucketShare(){
    const bucketShareTitle = $('#modelTitle2').text();
    const bucketShareName = $('#modelName2').text().split(" : ")[1];
    const bucketShareCount = $('#modelShareCount2').text().split(" : ")[1];
    if(localStorage.getItem('name')===null ||localStorage.getItem('name')===undefined ){
      alert('로그인 후 이용 가능합니다.');
      return location.href='https://todo-list.auth.ap-northeast-2.amazoncognito.com/login?client_id=7r03hfgoepij4uajvqj1vq94d2&response_type=token&scope=email+openid+profile&redirect_uri=https://flutterStudy.com';
    }
    $.ajax({
      type:"POST",
      url:"/api/bucketLists/bucketShare",
      data:{
        shareTitle:bucketShareTitle,
        shareName:bucketShareName,
        shareCount:bucketShareCount
      },
      success:function (res){
        alert(res.msg)
      }
    })
  }
  //모달 버튼 작동
  function commentOpen(){
    $('.modal-content').animate({left:-248})
    $('.comment').animate({left:498});
    $('.modal-footer').animate({width:1000});
    $('.sorry').addClass('modal-hide');
    $('.commentAdd').removeClass('modal-hide');
    $('.btn-X').addClass('modal-hide');

  }

  // 모달 창 닫기
  function modalX(){
    $('.modal-content').animate({left:0});
    $('.comment').animate({left:0});
    $('.modal-footer').animate({width:500});
    $('.commentAdd').addClass('modal-hide');
    $('.sorry').removeClass('modal-hide');
    $('.btn-X').removeClass('modal-hide');
  }
  // 모달
  function modalCX(){
    $('.modal-content').animate({left:0});
    $('.comment').animate({left:0});
    $('.modal-footer').animate({width:500});
    $('.sorry').removeClass('modal-hide');
    $('.commentAdd').addClass('modal-hide');
    $('.btn-X').removeClass('modal-hide');
  }
  //버킷 댓글 작성완료
  function createComments(){
    const title = $('#modelTitle2').text();
    const name = $('#modelName2').text().split(":")[1].trim();
    const date = $('#modelDate2').text().split(":")[1].trim();
    const myComment = $('#myComment').val();
    if(localStorage.getItem('name')===null ||localStorage.getItem('name')===undefined ){
      alert('로그인 후 이용 가능합니다.');
      return location.href='https://todo-list.auth.ap-northeast-2.amazoncognito.com/login?client_id=7r03hfgoepij4uajvqj1vq94d2&response_type=token&scope=email+openid+profile&redirect_uri=https://flutterStudy.com';
    }
    if(myComment===''){
      alert("댓글을 입력해주세요");
      return;
    }
    $.ajax({
      type:"POST",
      url:'/api/reviews/bucket',
      data:{title:title,
      name:name,
      date:date,
      myComment:myComment},
      success:function(res){
        alert(res.msg);
        getComments();
        $('#myComment').val('');
      }
    });

  }
  //버킷 댓글 가져오기
  function getComments(){
    const title = $('#modelTitle2').text();
    const name = $('#modelName2').text().split(":")[1].trim();
    const date = $('#modelDate2').text().split(":")[1].trim();
    $.ajax({
      type:"GET",
      url:'/api/reviews/bucket',
      data:{title:title,
        name:name,
        date:date},
      success:function(res){
        const reviews = res;
        if(res.length ===0){
          $('#bucket-re *').remove();
          $('#bucket-re').append(` <button type="button" onclick="commentOpen()" class="sorry btn btn-primary">댓글 작성하러 가기</button>
            <button type="button" onclick="createTodoComments()" class="commentAdd btn btn-primary modal-hide">댓글 작성</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="modalX()">Close</button>`);
        }else{
          $('#bucket-re *').remove();
          $('#bucket-re').append(` <button type="button" onclick="commentOpen()" class="sorry btn btn-primary">${res.length}개의 댓글 보기</button>
            <button type="button" onclick="createTodoComments()" class="commentAdd btn btn-primary modal-hide">댓글 작성</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="modalX()">Close</button>`);
        }
        $('#bucketComment *').remove();
        for(let i=0; i<reviews.length; i++){
          const name = reviews[i].name;
          const content = reviews[i].content;
          if(name === localStorage.getItem('name')){
            $('#bucketComment').append(`
            <p style="position:relative; padding:0; margin: 0;">
                <span>작성자 : ${name}</span>
                <button style="right:10px; position: absolute; border: 0; background: none;" onclick="delComment()"><i class="fa-solid fa-xmark"></i></button>
<br/>
<span class='contents'>${content}</span>
            </p>

          `)
          }else{
            $('#bucketComment').append(`
            <p style="position:relative; padding:0; margin: 0;">
                <span>작성자 : ${name}</span>
<br/>
<span class='contents'>${content}</span>
            </p>

          `)
          }

        }
      }
    });
  }
  //버킷 댓글 삭제
  function delComment(){
    const title = $('#modelTitle2').text();
    const name = $('#modelName2').text().split(":")[1].trim();
    const date = $('#modelDate2').text().split(":")[1].trim();
    const content = $(event.target).parents('p').find('.contents').text();
    $.ajax({
      type:"delete",
      url:'/api/reviews/bucket',
      data:{
        title:title,
        name:name,
        date:date,
        content:content
      },
      success:function(res){
        alert(res.msg);
        getComments();
      }
    })
  }
  //투두 댓글 작성완료
  function createTodoComments(){
    if(localStorage.getItem('name')===null ||localStorage.getItem('name')===undefined ){
      alert('로그인 후 이용 가능합니다.');
      return location.href='https://todo-list.auth.ap-northeast-2.amazoncognito.com/login?client_id=7r03hfgoepij4uajvqj1vq94d2&response_type=token&scope=email+openid+profile&redirect_uri=https://flutterStudy.com';
    }
    const title = $('#modelTitle1').text();
    const name = $('#modelName1').text().split(":")[1].trim();
    const date = $('#modelDate1').text().split(":")[1].trim();
    const myComment = $('#myComment2').val();
    if(myComment===""){
      alert("댓글을 입력해주세요");
      return;
    }
    $.ajax({
      type:"POST",
      url:'/api/reviews/todo',
      data:{title:title,
        name:name,
        date:date,
        myComment:myComment},
      success:function(res){
        alert(res.msg);
        getTodoComments();
        $('#myComment2').val('');
      }
    });

  }
  //투두 댓글 가져오기
  function getTodoComments(){
    const title = $('#modelTitle1').text();
    const name = $('#modelName1').text().split(":")[1].trim();
    const date = $('#modelDate1').text().split(":")[1].trim();
    $.ajax({
      type:"GET",
      url:'/api/reviews/todo',
      data:{title:title,
        name:name,
        date:date},
      success:function(res){
        const reviews = res;
        if(res.length ===0){
          $('#todo-re *').remove();
          $('#todo-re').append(` <button type="button" onclick="commentOpen()" class="sorry btn btn-primary">댓글 작성하러 가기</button>
            <button type="button" onclick="createTodoComments()" class="commentAdd btn btn-primary modal-hide">댓글 작성</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="modalX()">Close</button>`);
        }else{
          $('#todo-re *').remove();
          $('#todo-re').append(` <button type="button" onclick="commentOpen()" class="sorry btn btn-primary">${res.length}개의 댓글 보기</button>
            <button type="button" onclick="createTodoComments()" class="commentAdd btn btn-primary modal-hide">댓글 작성</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="modalX()">Close</button>`);
        }

        $('#todoComment *').remove();
        for(let i=0; i<reviews.length; i++){
          const name = reviews[i].name;
          const content = reviews[i].content;
          if(name === localStorage.getItem('name')){
            $('#todoComment').append(`
            <p style="position:relative; padding:0; margin: 0;">
                <span>작성자 : ${name}</span>
                <button style="right:10px; position: absolute; border: 0; background: none;" onclick="delTodoComment()"><i class="fa-solid fa-xmark"></i></button>
<br/>
<span class='contents'>${content}</span>
            </p>

          `)
          }else{
            $('#todoComment').append(`
            <p style="position:relative; padding:0; margin: 0;">
                <span>작성자 : ${name}</span>
<br/>
<span class='contents'>${content}</span>
            </p>

          `)
          }
        }
      }
    });

  }
  //투두 댓글 삭제
  function delTodoComment(){
    const title = $('#modelTitle1').text();
    const name = $('#modelName1').text().split(":")[1].trim();
    const date = $('#modelDate1').text().split(":")[1].trim();
    const content = $(event.target).parents('p').find('.contents').text();
    $.ajax({
      type:"delete",
      url:'/api/reviews/todo',
      data:{
        title:title,
        name:name,
        date:date,
        content:content
      },
      success:function(res){
        alert(res.msg);
        getTodoComments();
      }
    })
  }

  function goBucketList(){
    if(localStorage.getItem('name')===null ||localStorage.getItem('name')===undefined ){
      alert('로그인 후 이용 가능합니다.');
      return location.href='https://todo-list.auth.ap-northeast-2.amazoncognito.com/login?client_id=7r03hfgoepij4uajvqj1vq94d2&response_type=token&scope=email+openid+profile&redirect_uri=https://flutterStudy.com';
    }
    location.href='/page/bucketList';
  }
  function goTodoList(){
    if(localStorage.getItem('name')===null ||localStorage.getItem('name')===undefined ){
      alert('로그인 후 이용 가능합니다.');
      return location.href='https://todo-list.auth.ap-northeast-2.amazoncognito.com/login?client_id=7r03hfgoepij4uajvqj1vq94d2&response_type=token&scope=email+openid+profile&redirect_uri=https://flutterStudy.com';
    }
    location.href='/page/todoListDetail';
  }
</script>
<body>
  <!--네비게이션-->
  <%-include('./topNav')%>
  <!--바디-->
  <div class="container-fluid" style="background-size: 100% 100%; margin-top: 130px;">
    <div class="container" style="background-image: url('img/cork.jpg');background-size: 100% 100%;/* padding-top: 50px; */padding-left: 50px;padding-bottom: 60px;">
      <section>
        <div class="container-fluid">
          <div class="row" style="margin-top:20px;">
            <div class="col-md-6" style="min-height: 360px; background-size: 100% 100%; width: 48%; padding-top: 60px;">
              <div class="row">
                <div class="col-md-3" style="padding-left:20px; line-height: 58px; "></div>
              </div>
              <div style="text-align: center; border-radius: 10px;" id="calendar"></div>
            </div>
            <div class="col-md-6">
              <div class="row" style="margin-top: 92px;">
                <div class="col-md-3"></div>
                <div class="col-md-6" style="min-height: 400px; background-image: url('img/abc.png'); background-size: 100% 100%; margin-left: 60px; width: 80%;">
                  <h3 style="text-align: center;">TODO리스트</h3>
                  <p style="text-align: right; padding-right: 48px; margin-top: 38px;">
                    <a onclick="goTodoList()" style="color: blue; font-weight: bold; text-decoration-line: none;" class="more">+more</a>
                  </p>
                  <div style="text-align: center;" id="todoPreview"></div>
                </div>                
              </div>  
              <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-6" style="min-height: 400px; background-image: url('img/abc.png'); background-size: 100% 100%; margin-left: 60px; width: 80%;">
                  <h3 style="text-align: center;">BUCKET리스트</h3>
                  <p style="text-align: right; padding-right: 48px; margin-top: 38px;">
                    <a onclick="goBucketList()" style="color: blue; font-weight: bold; text-decoration-line: none;" class="more">+more</a>
                  </p>
                  <div style="text-align: center;" id="bucketPreview"></div>
                </div>
                <div class="col-md-3" style="padding-left:20px;"></div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
  </div>
  
  <!-- Slider -->
  <section>
    <div style="margin-top: 50px;">
      <h4 style="text-align: center;">추천 TODOLIST</h4>
      <div class="container" style="position: relative;">
        <!-- Cards Wrap -->
        <div class="slider1 d-flex align-items-center justify-content-start overflow-hidden position-relative">
          <div class="slider-wrap d-flex align-items-center position-absolute" id="todofeed">
            <div class="slide-card1">  
            </div>
          </div>
        </div>
        <!-- Slider Arrows -->
        <!-- Left Arrow -->
        <a class="text-dark" id="todo-previous-arrow">
          <div class="arrow bg-white d-flex align-items-center justify-content-center shadow-lg border rounded-circle position-absolute bottom-50 start-0" style="cursor: pointer">
            <i class="fa fa-angle-left" aria-hidden="true"></i>
          </div>
        </a>
        <!-- Right Arrow -->
        <a class="text-dark" id="todo-next-arrow">
          <div class="arrow bg-white d-flex align-items-center justify-content-center shadow-lg border rounded-circle position-absolute bottom-50 end-0"style="cursor: pointer">
            <i class="fa fa-angle-right" aria-hidden="true"></i>
          </div>
        </a>
      </div>
    </div>
  </section>
  <section style="margin-top: 30px;">
    <h4 style="margin-bottom: 30px; text-align: center;">추천 BUCKETLIST</h4>
    <div class="container" style="position: relative;">
      <!-- Cards Wrap -->
      <div class="slider2 d-flex align-items-center justify-content-start overflow-hidden position-relative">
        <div class="slider-wrap d-flex align-items-center position-absolute" id="bucketfeed">
          <div class="slide-card2">  
          </div>
        </div>
      </div>
      <!-- Slider Arrows -->
      <!-- Left Arrow -->
      <a class="text-dark" id="bucket-previous-arrow">
        <div class="arrow bg-white d-flex align-items-center justify-content-center shadow-lg border rounded-circle position-absolute bottom-50 start-0"style="cursor: pointer">
          <i class="fa fa-angle-left" aria-hidden="true"></i>
        </div>
      </a>
      <!-- Right Arrow -->
      <a class="text-dark" id="bucket-next-arrow">
        <div class="arrow bg-white d-flex align-items-center justify-content-center shadow-lg border rounded-circle position-absolute bottom-50 end-0"style="cursor: pointer">
          <i class="fa fa-angle-right" aria-hidden="true"></i>
        </div>
      </a>
    </div>
  </section>
  <!-- Modal -->
  <div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content" style="position: relative">
        <div class="row">
          <div class="col-md-12 comment" style="position: absolute; top:0; left:0; background: #fff;height:788px; z-index: -1; border-radius: 5px;">
            <h3 style="margin-top: 10px;">댓글</h3>
            <button type="button" style="position: absolute; top:20px; right:20px;" onclick="modalCX()" class="btn-close"aria-label="Close"></button>
            <div style="height: 550px; padding-top:10px; padding-bottom: 10px; overflow-y: scroll" id="todoComment">
            </div>
            <div style="border-top:1px solid #eee; margin-top: 30px;">
              <textarea name="comment" id="myComment2" style="width: 100%;"></textarea>
            </div>
          </div>
          <div class="col-md-12" style="height:788px;">
            <div class="modal-header" style="position: relative">
          <div style="width:100%;height:400px; background-position: center; background-size: contain;background-repeat: no-repeat" id="modelImg1"></div>
          <button type="button" onclick="modalX()" style="position: absolute; top:20px; right:20px;" class="btn-close btn-X" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
            <div class="modal-body">
          <h1 id="modelTitle1"></h1>
          <p id="modelName1"></p>
          <p id="modelDate1"></p>
          <p id="modelContent1"></p>
          <p id="modelShareCount1"></p>
          <button type="button" onclick="todoShare()" class="btn btn-primary">나의 투두로 가져오기</button>
        </div>
          <div class="modal-footer" id="todo-re" style="border:0" >

          </div>
        </div>
      </div>
    </div>
    </div>
  </div>
  
  <div class="modal fade" id="exampleModal2" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="position: relative">
          <div class="row">
            <div class="col-md-12 comment" style="position: absolute; top:0; left:0; background: #fff;height:788px; z-index: -1; border-radius: 5px;">
              <h3 style="margin-top: 10px;">댓글</h3>
              <button type="button" style="position: absolute; top:20px; right:20px;" onclick="modalCX()" class="btn-close"aria-label="Close"></button>
              <div style="height: 550px; padding-top:10px; padding-bottom: 10px; overflow-y: scroll" id="bucketComment">
              </div>
              <div style="border-top:1px solid #eee; margin-top: 30px;">
                <textarea name="comment" id="myComment" style="width: 100%;"></textarea>
              </div>
            </div>
            <div class="col-md-12" style="height:788px;">
              <div class="modal-header" style="position: relative">
            <div style="width:100%;height:400px; background-position: center; background-size: contain;background-repeat: no-repeat" id="modelImg2"></div>
            <button type="button" onclick="modalX()" style="position: absolute; top:20px; right:20px;" class="btn-close btn-X" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
              <div class="modal-body">
            <h1 id="modelTitle2"></h1>
            <p id="modelName2"></p>
            <p id="modelDate2"></p>
            <p id="modelContent2"></p>
            <p id="modelShareCount2"></p>
            <button type="button" onclick="bucketShare()" class="btn btn-primary">나의 버킷으로 가져오기</button>
          </div>
            <div class="modal-footer" style="border:0" id="bucket-re" >

            </div>
          </div>
        </div>
      </div>
  </div>
</div>
<!--풋터-->
<%-include('./footer')%>
</body>
</html>